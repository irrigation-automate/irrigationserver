name: PR Checks

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - develop

jobs:
  lint-types-tests:
    name: Lint, Type Check & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      PORT: ${{ secrets.PORT }}
      mongoDbUserName: ${{ secrets.mongoDbUserName }}
      mongoDbPassword: ${{ secrets.mongoDbPassword }}
      mongoDbDatabase: ${{ secrets.mongoDbDatabase }}
      JWTSecret: ${{ secrets.JWTSecret }}
      NODE_ENV: ${{ secrets.NODE_ENV }}

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🛠️ Install pnpm globally and Vercel CLI
        run: |
          npm install --global pnpm
          npm install --global vercel

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🔎 Run ESLint
        run: pnpm lint

      - name: 🔍 TypeScript type check
        run: npx tsc --noEmit

      - name: 🧪 Run Jest tests with coverage
        run: pnpm test -- --coverage

      - name: 📤 Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: lint-types-tests

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🔍 SonarQube Scan (develop baseline)
        if: github.ref == 'refs/heads/develop'
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=irrigation-automate_irrigationserver
            -Dsonar.organization=irrigation-automate
            -Dsonar.projectName=irrigationserver
            -Dsonar.sources=src
            -Dsonar.tests=__tests__
            -Dsonar.test.inclusions="**/*.test.ts,**/*.spec.ts"
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.branch.name=develop

      - name: 🔍 SonarQube Scan (PR)
        if: github.event_name == 'pull_request'
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=irrigation-automate_irrigationserver
            -Dsonar.organization=irrigation-automate
            -Dsonar.projectName=irrigationserver
            -Dsonar.sources=src
            -Dsonar.tests=__tests__
            -Dsonar.test.inclusions="**/*.test.ts,**/*.spec.ts"
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
